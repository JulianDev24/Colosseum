name: Ubuntu Build

# Controls when the action will run.
on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup
        run: ./setup.sh

      - name: Build AirLib
        run: ./build.sh

      - name: Build ROS Wrapper
        run: |
          ./tools/install_ros_deps.sh
          source /opt/ros/*/setup.bash
          cd ros
          catkin build -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8
      
      - name: Build ROS2 Wrapper
        if: matrix.os == 'ubuntu-20.04'
        run: |
          chmod +x ./tools/install_ros2_deps.sh
          ./tools/install_ros2_deps.sh
          source /opt/ros/*/setup.bash
          cd ros2
          colcon build --cmake-args -DCMAKE_C_COMPILER=gcc-8 --cmake-args -DCMAKE_CXX_COMPILER=g++-8
          
      - name: Build GazeboDrone
        run: |
          sudo apt-get install -qq libgazebo9-dev gcc-12 g++-12
          ./clean.sh && ./build.sh --gcc
          cd GazeboDrone
          mkdir build && cd build
          cmake -DCMAKE_C_COMPILER=gcc-12 -DCMAKE_CXX_COMPILER=g++-12 ..
          make

      - name: Build GazeboDroneV2
        run: |
          # Update the package list and install the necessary packages
          sudo apt-get update -qq
          sudo apt-get install -qq libgazebo-dev gcc-12 g++-12
          
          # Set the environment variables for the compilers
          export CC=gcc-12
          export CXX=g++-12
          
          # Clean previous builds and build the project with the specified compilers
          ./clean.sh && ./build.sh --gcc
          
          # Create a build directory, configure the project with CMake, and compile it
          cd GazeboDrone
          mkdir build && cd build
          cmake -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} ..
          make
